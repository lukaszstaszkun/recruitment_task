name: Docker Test
on:
  workflow_dispatch:
    inputs:
      package_version:
        type: string
        description: Manually set the current version of the package. Follow the pattern of vX.Y.Z e.g. v1.0.1
        required: false
  #push:
  #  branches: [ "main" ]

permissions:
  contents: write
  packages: write

# action.yml
jobs:
  docker_setup:
    runs-on: ubuntu-latest
    steps:
      - name: GHCR Login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout repo
        uses: actions/checkout@v4
    
      - name: Tagging Repo
        id: version
        run: |
          echo === Tagging ===
          latest_tag=$(git tag --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)
          if [ -z "$latest" ]; then
            new_version="v1.0.0"
          else
            IFS='.' read -r major minor patch <<< "${latest_tag#v}"
            patch=$((patch + 1))
            new_version="v$major.$minor.$patch"
          fi

          echo "new_version=$new_version" >> $GITHUB_OUTPUT
          echo "New version: $new_version"

      - name: Tag commit with version
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          git tag ${{ github.event.inputs.package_version || steps.version.outputs.new_version }}
          git push origin ${{ github.event.inputs.package_version || steps.version.outputs.new_version }}

      - name: Docker push
        run: |
           docker build -t ghcr.io/lukaszstaszkun/docker_container:${{ github.event.inputs.package_version || steps.version.outputs.new_version }} DOCKERS/.
           docker push ghcr.io/lukaszstaszkun/docker_container:${{ github.event.inputs.package_version || steps.version.outputs.new_version }}

  run_in_docker:
    needs: [docker_setup]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/lukaszstaszkun/test:latest
    steps:
    - name: Run inside the container
      run: php -v   # cokolwiek chcesz

      #- name: Build Docker image from Dockerfile
      #  uses: docker/build-push-action@v5
      #  with:
      #    context: .
      #    file: .DOCKERS/dockerfile
      #    tags: my-app:latest
      #    push: false
      #      ls

    - name: Checking if docker is running
      run: |
        echo === checking whoami ===
        whoami
        echo === checking pwd and ls ===
        pwd
        ls
        composer --version
